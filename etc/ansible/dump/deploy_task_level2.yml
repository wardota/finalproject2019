- ios_facts:
    gather_subset: all
- ios_facts:
    gather_subset:
      - config
- ios_facts:
    gather_subset:
      - "!hardware"
 all, min, hardware, network, virtual, ohai, and facter
 !hardware,!network,!virtual,!ohai,!facter
all:	gather all subsets (the default)
network:	gather network facts
hardware:	gather hardware facts (longest facts to retrieve)
virtual:	gather facts about virtual machines hosted on the machine
ohai:	gather facts from ohai
facter:	gather facts from facter

- name: Collect only facts returned by facter
  setup:
    gather_subset:
      - '!all'
      - '!any'
      - facter
- ios_facts:
    gather_subset:
      - "!interfaces"

- name: set vlan
  ios_command:

















[ios_l2_interface]
- name: Ensure interface VLAN access/trunk
  ios_l2_interface:
    access_vlan: NULL
    aggregate: NULL
    authorize: no | yes
    mode: access | trunk
    name: FastEthernet1/0
    state: present | absent | unconfigured 
    trunk_allowed_vlan:
    trunk_vlan:	
    native_vlan:
[example]     
- name: Ensure GigabitEthernet0/5 is in its default l2 interface state
  ios_l2_interface:
    name: GigabitEthernet0/5
    state: unconfigured

- name: Ensure GigabitEthernet0/5 is configured for access vlan 20
  ios_l2_interface:
    name: GigabitEthernet0/5
    mode: access
    access_vlan: 20

- name: Ensure GigabitEthernet0/5 only has vlans 5-10 as trunk vlans
  ios_l2_interface:
    name: GigabitEthernet0/5
    mode: trunk
    native_vlan: 10
    trunk_vlans: 5-10

- name: Ensure GigabitEthernet0/5 is a trunk port and ensure 2-50 are being tagged (doesn't mean others aren't also being tagged)
  ios_l2_interface:
    name: GigabitEthernet0/5
    mode: trunk
    native_vlan: 10
    trunk_vlans: 2-50

- name: Ensure these VLANs are not being tagged on the trunk
  ios_l2_interface:
    name: GigabitEthernet0/5
    mode: trunk
    trunk_vlans: 51-4094
    state: absent




a

