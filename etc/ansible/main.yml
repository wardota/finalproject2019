---
- name: Automation Project
  hosts: ku3_a1
  gather_facts: no
  gather_timeout: 60
  connection: network_cli
  ignore_errors: no
  vars_files:
    - vars/common.yml

  pre_tasks:    

    - name: ping test
      block: 
        - pause:
            prompt: "TARGET HOST or IP undefined, Please cancel or type IP Address of host {{hostname}} "
          when: ansible_hostasd is undefined
          register: prompt_host
        - pause:
            prompt: "ansible_ssh_user enter to continue"
          when: ansible_ssh_userasd is undefined and ansible_userasd is undefined
          register: prompt_user
        - pause:
            prompt: "ansible_ssh_passPress enter to continue"
            echo: no
          when: ansible_ssh_passasd is undefined and ansible_padass is undefined
          register: prompt_pass
        - debug:
            var: prompt_host.user_input |replace('\\b','')| regex_replace('(.*)(\d*.\d*.\d*.\d*)','$2')
      delegate_to: localhost
      
    - name: ping test
      block: 
          #   PING TEST
        - name: test PING to host
          ping:
            data: pong
          register: test 
          failed_when: test.ping != 'pong'
          ignore_errors: yes
        - debug:
            msg: 
              - "FAILED because,{{test.msg}}"
              - "ip: {{ansible_host}} , hostname: {{hostname}} , user: {{ansible_ssh_user}} , pass: {{ansible_ssh_pass|hash('sha1')}}"
          when: test.failed
          failed_when: test.failed
          delegate_to: localhost
      rescue:
        - debug:
            msg: "'Plz input input username ofy'"
          delegate_to: localhost
        - pause:
            prompt: "Provide a value for example_var. Enter defaults to 'example_value':"
          when: example_var is not defined
          register: example_var
          delegate_to: localhost
 
        - name: Default for example_var
          set_fact:
            example_var: example_value
          when: example_var == ""
          delegate_to: localhost
        # - pause:
        #     prompt: undefined # not required. Optional text to use for the prompt message.
        # - set_fact:
        #     key: 
        - debug:
            var: example_var
          delegate_to: localhost

  
        # - debug: 
        #     msg: "ip: {{ansible_host}} , hostname: {{hostname}} , user: {{ansible_ssh_user}} , pass: {{ansible_ssh_pass|hash('sha1')}}"
        # - set_fact:
        #     ansible_host_status: 
        # - name: get show 
        #   ios_command:
        #     commands:
        #       - "show version"
        #   register: init_ping

            # #     - set_fact:
            # #         host_ip: "{{ansible_host}}"
            # #         username: "{{ansible_ssh_user}}"
            # #         password: "{{ansible_ssh_pass}}"
            # #         new_ansible_host: 10.240.192.20 

  roles: 
    - "{{roles_1st | default('')}}"
    - "{{roles_2nd | default('')}}"
    - "{{roles_3rd | default('')}}"
    - "{{roles_4th | default('')}}"
    - "{{roles_5th | default('')}}"
    - "{{roles_6th | default('')}}"
    - "{{roles_7th | default('')}}"
    - "{{roles_8th | default('')}}"
    - "{{roles_9th | default('')}}"
    - "{{roles_10th | default('')}}"
    - "{{roles_11th | default('')}}"
    - "{{roles_12th | default('')}}"

    - "{{roles_last | default('')}}"
    
  tasks:
  post_tasks:



















































  # TEST
            # # - name: get user,pass,target
            # #   block:
            # #     - set_fact:
            # #         host_ip: "{{ansible_host}}"
            # #         username: "{{ansible_ssh_user}}"
            # #         password: "{{ansible_ssh_pass}}"
            # #         new_ansible_host: 10.240.192.20 
            # #   when: pre_tasks.init == true 
            #         # #==================================  
            #         #     - debug:
            #         #         var: ansible_host
            #         #         verbosity: 2 #"{{ verbosity }}" 
            #         #     - debug:
            #         #         var: hostname
            #         #         verbosity: 2 #"{{ verbosity }}" 
            #         #     - debug:
            #         #         var: "{{hostname}}"
            #         #         verbosity: 2 #"{{ verbosity }}"    
            #         #       register: host_db        
            #         # - name: test set hostname
            #         #   ios_config:
            #         #     lines:
            #         #       - hostname {{hostname}}
            #         #     provider:
            #         #       timeout: "{{ timeout }}"
            #         #   delay: "{{ delay }}"
            #         #   retries: "{{ retries }}"
            #         #   ignore_errors: yes
            #         #   register: result
            #         #   until: result.changed
            #               # provider:
            #               #   password: "{{password}}"
            #               #   username: "{{username}}"
            #               #   timeout: "{{ timeout }}"
            #                 # host: "{{host_ip}}"
            #       register: output
            #     #   #switch host target
            #     # - set_fact:
            #     #     ansible_host: "{{new_ansible_host}}"
            #     #     ansible_user: "{{new_ansible_user}}" 
            #     #     ansible_password: "{{new_ansible_password}}"
            #     # - name: get show 2
            #     #   ios_command:
            #     #     commands:
            #     #       - "show run"
            #     #           # provider:
            #     #           #   password: "{{password}}"
            #     #           #   username: "{{username}}"
            #     #           #   timeout: "{{ timeout }}"
            #     #             # host: "{{host_ip}}"
            #     #   register: output
            #     - set_fact:
            #         ansible_case: usage
            #   when: pre_tasks.pingtest == true

