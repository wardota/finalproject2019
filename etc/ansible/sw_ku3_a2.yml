
---
- name: sw_ku3_a2
########################################
# TARGET, CONNECTION, STUFF
  hosts: ku3_a2
  gather_facts: no
  gather_timeout: 60  
  connection: local
  ignore_errors: yes

######################################## aadas
# VARIABLE                               
  vars:
    hostname: sw_ku3_a2 
    timeout: 60
    ansible_command_timeout: 60
  vars_files:
    - /etc/ansible/vars/dhcp_pool_db_v2.yml #pooldb dan pooldb2 
    - /etc/ansible/vars/userdb_v2.yml # userdb dan userdb2
    - /etc/ansible/vars/serviceslist_global.yml
    - /etc/ansible/vars/cert_data.yml
    - /etc/ansible/vars/line_db.yml
    - /etc/ansible/vars/sw_ku3_a2.yml  
    - /etc/ansible/vars/common.yml
    - /etc/ansible/vars/vlan_db.yml
    - /etc/ansible/vars/interface_db.yml
    # variable yang sama teroveride file yang paling terakhir/latest
########################################

  tasks:
# TEST AND DEBUG TASK   

 
    - name: DEBUG VAR - EXPERIMENTAL DUMP
      debug: 
        var: hostname
        verbosity: "{{ set_verbosity }}"
    - debug:
        var: "{{hostname}}"
        verbosity: "{{ set_verbosity }}"    
      register: host_db 
      # - debug: # match item of vlan_db listed on hostname.vlan.by_name
      #     var: "{{ item  }}.vlan"
      #   loop: "{{([hostname])}}"
      #   register: host_db
      # - debug:
      #     var: host_db
      # when: item.name in {{hostname}}.vlan.by_name
      # register: match_vlan_by_name
          # var: interface_db[hostname_a2].4.access_vlan == interface_db[hostname_a2].5.access_vlan
          # var: interface_db[hostname_a2].4.access_vlan 
          # var: interface_db[hostname_a2].5.access_vlan 
          # var: interface_db_summary[hostname_a2].amount_used_vlan.access
          # msg: '{{ ((interface_db[hostname_a2] | selectattr("access_vlan", "defined")| map(attribute="access_vlan") | list ) +( interface_db[hostname_a2] | selectattr("native_vlan", "defined") | map(attribute="native_vlan") | list )) | unique}}' 
          # var: vlan_db | json_query('[*].[vlan_id][]')
          # var: listoflist | flatten
          # var : interface_db[hostname_a2] | json_query("[*].[access_vlan,native_vlan,trunk_allowed_vlan,trunk_allowed_vlan_add][]") 

          # - name: count our fruit
          #   debug:
          #     msg: "{{ item }} with index {{ my_idx }}"
          #   loop:
          #     - apple
          #     - banana
          #     - pear
          #   loop_control:
          #     index_var: my_idx
          #     pause : 3
          # - name: create servers
          #   debug:
          #     var: item.name

          #   loop:
          #     - name: server1
          #       disks: 3gb
          #       ram: 15Gb
          #       network:
          #         nic01: 100Gb
          #         nic02: 10Gb
          #     - name: server2
          #       disks: 3gb
          #       ram: 15Gb
          #       network:
          #         nic01: 100Gb
          #         nic02: 10Gb
          #   loop_control:
          #     label: "{{ item.name }}"  
          #   register: aaa
          # - debug:
          #     var: aaa     

    - name: DEBUG MSG - EXPERIMENTAL DUMP
      debug:
        msg: ""
        verbosity: "{{ set_verbosity }}"
        # msg: ""
 
########################################### 
# SETUP VLAN - EXPRIMENTAL- ONGOING -     
    - name: include tasks setup_vlan.yml to setup vlana
      include_role:
        name: sw_ku3_a2
        tasks_from: setup_vlan_v2.yml

    - name: include tasks setup_service_line_vty_ssh.yml to setup line vty 
      include_role:
        name: sw_ku3_a2
        tasks_from: setup_interface.yml
        
############################################
# LINE VTY                                
    - name: include tasks setup_service_line_vty_ssh.yml to setup line vty 
      include_role:
        name: sw_ku3_a2
        tasks_from: setup_service_line_vty_ssh.yml
        

############################################   
# SETUP USER V2                           
    - name: include tasks setup_user_v2.yml to setup users v2
      include_role:
        name: sw_ku3_a2
        tasks_from: setup_user_v2.yml 
############################################
# LINE VTY                                
    - name: include tasks setup_service_line_vty_ssh.yml to setup line vty 
      include_role:
        name: sw_ku3_a2
        tasks_from: setup_service_line_vty_ssh.yml
############################################
# SETUP USER V1                           
    - name: include tasks setup_user.yml to setup users
      include_role:
        name: sw_ku3_a2
        tasks_from: setup_user.yml 
############################################
# ENABLE SERVICES                         
    - name: include tasks service_enable.yml to enable service  
      include_role:
        name: sw_ku3_a2
        tasks_from: service_enable.yml
############################################
# DISABLE SERVICES                        
    - name: include tasks service_disable.yml to disable service  
      include_role:
        name: sw_ku3_a2
        tasks_from: service_disable.yml
############################################
# DHCP POOL V1                            
    - name: include tasks setup_dhcp_v1.yml to create dhcp  
      include_role:
        name: sw_ku3_a2
        tasks_from: setup_dhcp_v1.yml
      loop: "{{ host_db[hostname].dhcp_pool }}"
      loop_control:
        loop_var: outer_item         
# DHCP POOL V2                            
    - name: include task setup_dhcp_v2.yml to setup dhcp
      include_role:
        name: sw_ku3_a2
        tasks_from: setup_dhcp_v2.yml
############################################
# TEMP INCLUDE TASK
    # - name: include tasks to create dhcp  
      # include_role:
        # name: sw_ku3_a2
        # tasks_from: create_dhcp.yml
      # vars:
        # poolname: WIFI_B_LT1A 
############################################
# CERT AND SSH KEY - EXPRIMENTAL- STUCK -
  #  cert_mode: self-signed
  #  cert_name: TP-self-signed-378256384
  #  names: cert_1
  #  pass: sakti123
  ## BELUM BERHASIL: DELETE CRYPTO PKI
  #    - name: delete crypto pki certificate {{ cert_name }}
  #      ios_config:
  #        lines: 
  #         # - no certificate {{ cert_mode }} 01
  #          - no crypto pki certificate chain TP-self-signed-378256384 \r y
  #        timeout: 30
  #        force: true
  #    - name: delete crypto pki trustpoint {{ cert_name }}
  #      ios_config:
  #        lines: 
  ##         - no crypto pki trustpoint {{ cert_name }}
  #          - 'no crypto pki certificate chain TP-self-signed-378256384'
  #       prompt: 'Are you sure you want to remove the certificate? [yes/no]:'
  #        answer: 'y'
  #      #  after:yes
  #      #  match:
  #     #   - none
  ########################

  # #    - name: create crypto pki trustpoint {{ mycert[names].name }}
  # #      ios_config: 
  # #        lines: 
  # #          - enrollment {{ mycert[names].enrollment }}
  # #          - subject-name cn=IOS-Self-Signed-Cert-123
  # #          - revocation-check none
  # #          - rsakeypair {{ mycert[names].name }}
  # #        parents:
  # #          - crypto pki trustpoint {{ mycert[names].name }}
          

      # - debug:
          # var:  mycert.{{names}}.key.{{item}}  
          # verbosity: 1
        # with_sequence: start=0 end="{{ (mycert[names].key | length) - 1 }}"


  # #debug: msg: "{{ mylist[item|int % mylist|length] }}

      # - name: entering HEX pubkey of crypto pki certificete #{{ mycert[names].name }}
        # ios_config: 
          # lines:   # "{{  mycert[names].key2 }}"
            # - certificate {{ mycert[names].mode }} {{ mycert[names].sn }}
            # -  mycert.{{names}}.key.{{item}}  
          # # - "{{ item }}"
            # - quit 
          # parents: crypto pki certificate chain {{ mycert[names].name }}
        # with_sequence: start=0 end="{{ (mycert[names].key | length) - 1 }}"

  # #           -  "{{ mycert[names].key[14] }}"   
  # #           -  "{{ mycert[names].key[15] }}"   
  # #          
      # #      - 30820229 30820192 A0030201 02020101 300D0609 2A864886 F70D0101 05050030
      # #      - 30312E30 2C060355 04031325 494F532D 53656C66 2D536967 6E65642D 43657274
      # #      - 69666963 6174652D 33373832 35363338 34301E17 0D313630 37323432 33313232
      # #      - 375A170D 32303031 30313030 30303030 5A303031 2E302C06 03550403 1325494F
      # #      - 532D5365 6C662D53 69676E65 642D4365 72746966 69636174 652D3337 38323536
      # #      - 33383430 819F300D 06092A86 4886F70D 01010105 0003818D 00308189 02818100
      # #      - A4EF01AA 6AED1BE0 4C09816E 889DE238 C3BECF25 9E2ED5B2 99650BC2 CEC03D37
      # #      - 5D78DFF4 5C40CE27 62D14A30 702D8C22 698167D1 13E24CEE C630666D 22AD0425
      # #      - F69F98E9 2B75E40A 9704C254 FC202DE4 0D0BC0AC A67A1A91 592CDB4B CD543DCF
      # #      - C1948DBF 8B915778 AAFD48C5 2B1A0CD0 431DDF62 ACCACB7D 923DAC4C 46204329
      # #      - 02030100 01A35330 51300F06 03551D13 0101FF04 05300301 01FF301F 0603551D
      # #      - 23041830 1680141A FF687DBD C12ABDC0 06650132 31F9736D E8004E30 1D060355
      # #      - 1D0E0416 04141AFF 687DBDC1 2ABDC006 65013231 F9736DE8 004E300D 06092A86
      # #      - 4886F70D 01010505 00038181 006795E7 01F95734 02D9F0F5 86E80DAB FE0D4982
      # #      - 1322D621 A89BB677 AFF99286 9B060D66 1642425D 98BF8541 82D1EC23 90D744A9
      # #      - 814F1F98 C3EFA626 B90F0DD2 2DA0463E 449C7D54 EBAA089B E02F241C D65A0BCD
      # #      - 9DA101AB 8B2654EE 0EB9C1AC 75DDEAB5 7F4BD082 76F916A1 BB59CCFF A98A5B26
      # #      - 592952C5 48E9CE82 D874FDB1 67

            # #- certificate {{ mycert[names].mode }} {{ mycert[names].sn }}
        # #  after: quit
############################################
# EOL
